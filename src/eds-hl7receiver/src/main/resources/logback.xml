<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">

  <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{dd MMM HH:mm:ss.SSS} [%thread] %-5level %logger{10}:%-3line - %msg%n
      </pattern>
    </encoder>
  </appender>

  <appender name="db" class="ch.qos.logback.classic.db.DBAppender">
    <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
      <driverClass>org.postgresql.Driver</driverClass>
      <url>${LOGBACK_JDBC_URL:-jdbc:postgresql://localhost:5432/logback}</url>
      <user>${LOGBACK_JDBC_USERNAME:-postgres}</user>
      <password>${LOGBACK_JDBC_PASSWORD}</password>
    </connectionSource>
  </appender>

  <!-- wrap the DB appender in an async one, that means it won't block when logging to the DB -->
  <appender name="db_async" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="db" />
    <discardingThreshold>0</discardingThreshold>
    <includeCallerData>true</includeCallerData>
  </appender>

  <timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss"/>

  <appender name="file" class="ch.qos.logback.core.FileAppender">
    <file>/var/log/${LOGBACK_FOLDER:-logback}/log-${bySecond}.txt</file>
    <encoder>
      <pattern>%d{dd MMM HH:mm:ss.SSS} [%thread] %-5level %logger{10}:%-3line - %msg%n
      </pattern>
    </encoder>
  </appender>

  <!-- use the environment variable LOGBACK_CONFIG_FILE to set an external log file,
       fallback to resource file logback-development.xml if not set -->
  <include file="${LOGBACK_CONFIG_FILE}" />

  <!-- specify a shutdown hook for logging, so all loggers are flushed before app exit -->
  <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

</configuration>